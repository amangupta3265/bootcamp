{"ast":null,"code":"var _jsxFileName = \"/Users/amang/bootcamp/bootcamp-playground/src/pages/Register.jsx\",\n  _s = $RefreshSig$();\nimport { useRef } from 'react';\nimport '../styles/Register.css';\nimport axios from 'axios';\nimport RegisterRequest from '../model/RegisterRequest';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const nameInput = useRef(null);\n  const emailInput = useRef(null);\n  const passwordInput = useRef(null);\n  const registerUser = async () => {\n    // TODO: escape characters here\n    const registerRequest = new RegisterRequest(nameInput.current.value, emailInput.current.value, passwordInput.current.value);\n    const res = await axios.post('http://localhost:8080/auth/signup', registerRequest).catch(error => {\n      console.log(error);\n    });\n    console.log(res.data.token);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: nameInput,\n      id: \"register-name\",\n      type: \"text\",\n      name: \"register-name\",\n      placeholder: \"Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: emailInput,\n      id: \"register-email\",\n      type: \"email\",\n      name: \"register-email\",\n      placeholder: \"Eamil\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: passwordInput,\n      id: \"register-password\",\n      type: \"password\",\n      name: \"register-password\",\n      placeholder: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"register-register-btn\",\n      onClick: registerUser,\n      children: \"Create Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(Register, \"weHlPPy0Ob4/Ysv0SKiuHE/PKyQ=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["useRef","axios","RegisterRequest","jsxDEV","_jsxDEV","Register","_s","nameInput","emailInput","passwordInput","registerUser","registerRequest","current","value","res","post","catch","error","console","log","data","token","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","id","type","name","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/amang/bootcamp/bootcamp-playground/src/pages/Register.jsx"],"sourcesContent":["import { useRef } from 'react';\nimport '../styles/Register.css'\nimport axios from 'axios';\nimport RegisterRequest from '../model/RegisterRequest';\n\nconst Register = () => {\n\n    const nameInput = useRef(null);\n    const emailInput = useRef(null);\n    const passwordInput = useRef(null);\n    \n\n    const registerUser = async () => {\n        // TODO: escape characters here\n        const registerRequest = \n            new RegisterRequest(\n                nameInput.current.value,\n                emailInput.current.value,\n                passwordInput.current.value\n            )\n        const res = await axios.post('http://localhost:8080/auth/signup', registerRequest).catch((error) => {console.log(error)});\n        console.log(res.data.token);\n    }\n\n\n    return (\n        <div className=\"container\">\n            <h1>Register</h1>\n            <input ref={nameInput} id=\"register-name\" type=\"text\" name=\"register-name\" placeholder=\"Name\"/>\n            <input ref={emailInput} id=\"register-email\" type=\"email\" name=\"register-email\" placeholder=\"Eamil\" />\n            <input ref={passwordInput} id=\"register-password\" type=\"password\" name=\"register-password\" placeholder=\"Password\" />\n            <button id=\"register-register-btn\" onClick={registerUser}>Create Account</button>\n        </div>\n    );\n}\n\nexport default Register;"],"mappings":";;AAAA,SAASA,MAAM,QAAQ,OAAO;AAC9B,OAAO,wBAAwB;AAC/B,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,eAAe,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEnB,MAAMC,SAAS,GAAGP,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMQ,UAAU,GAAGR,MAAM,CAAC,IAAI,CAAC;EAC/B,MAAMS,aAAa,GAAGT,MAAM,CAAC,IAAI,CAAC;EAGlC,MAAMU,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B;IACA,MAAMC,eAAe,GACjB,IAAIT,eAAe,CACfK,SAAS,CAACK,OAAO,CAACC,KAAK,EACvBL,UAAU,CAACI,OAAO,CAACC,KAAK,EACxBJ,aAAa,CAACG,OAAO,CAACC,KAC1B,CAAC;IACL,MAAMC,GAAG,GAAG,MAAMb,KAAK,CAACc,IAAI,CAAC,mCAAmC,EAAEJ,eAAe,CAAC,CAACK,KAAK,CAAEC,KAAK,IAAK;MAACC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAAA,CAAC,CAAC;IACzHC,OAAO,CAACC,GAAG,CAACL,GAAG,CAACM,IAAI,CAACC,KAAK,CAAC;EAC/B,CAAC;EAGD,oBACIjB,OAAA;IAAKkB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtBnB,OAAA;MAAAmB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBvB,OAAA;MAAOwB,GAAG,EAAErB,SAAU;MAACsB,EAAE,EAAC,eAAe;MAACC,IAAI,EAAC,MAAM;MAACC,IAAI,EAAC,eAAe;MAACC,WAAW,EAAC;IAAM;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC/FvB,OAAA;MAAOwB,GAAG,EAAEpB,UAAW;MAACqB,EAAE,EAAC,gBAAgB;MAACC,IAAI,EAAC,OAAO;MAACC,IAAI,EAAC,gBAAgB;MAACC,WAAW,EAAC;IAAO;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrGvB,OAAA;MAAOwB,GAAG,EAAEnB,aAAc;MAACoB,EAAE,EAAC,mBAAmB;MAACC,IAAI,EAAC,UAAU;MAACC,IAAI,EAAC,mBAAmB;MAACC,WAAW,EAAC;IAAU;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACpHvB,OAAA;MAAQyB,EAAE,EAAC,uBAAuB;MAACI,OAAO,EAAEvB,YAAa;MAAAa,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChF,CAAC;AAEd,CAAC;AAAArB,EAAA,CA7BKD,QAAQ;AAAA6B,EAAA,GAAR7B,QAAQ;AA+Bd,eAAeA,QAAQ;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}